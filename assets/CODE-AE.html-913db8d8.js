import{_ as t,a as p,b as e}from"./image-20230404185752020-ecc90e3f.js";import{_ as l,W as i,X as c,a1 as a,Y as s,Z as n}from"./framework-179f767b.js";const o={},u=a('<h1 id="文献阅读-1-code-ae" tabindex="-1"><a class="header-anchor" href="#文献阅读-1-code-ae" aria-hidden="true">#</a> 文献阅读（1）CODE-AE</h1><p>标题：A context-aware deconfounding autoencoder for robust prediction of personalized clinical drug response from cell-line compound screening**</p><h2 id="_1-亮点" tabindex="-1"><a class="header-anchor" href="#_1-亮点" aria-hidden="true">#</a> 1 亮点</h2><ol><li>CODE-AE既可提取不同样本间的<mark>共享生物信号</mark>，也可以提取它们特有的<mark>私有生物信号</mark>，从而分离出数据模式之间的混杂因素；</li><li>CODE-AE通过将药物反应信号与混杂因素分离，进而实现局部对齐（大多方法只能实现在全局上的对齐）。</li></ol><h2 id="_2-模型示意图" tabindex="-1"><a class="header-anchor" href="#_2-模型示意图" aria-hidden="true">#</a> 2 模型示意图</h2><figure><img src="'+t+'" alt="image-20230404115236668" tabindex="0" loading="lazy"><figcaption>image-20230404115236668</figcaption></figure><h4 id="_2-1-预训练" tabindex="-1"><a class="header-anchor" href="#_2-1-预训练" aria-hidden="true">#</a> 2.1 预训练</h4>',7),r=s("p",null,[n("在预训练阶段，使用无监督学习方法"),s("strong",null,"将Cell Line和Patient的基因表达矩阵映射到一个隐空间中"),n("，并且将生物混杂因素从其中分离出来，使得"),s("strong",null,[n("Patient的"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"Z"),s("msub",null,[s("mi",null,"t"),s("mi",null,"s")])])]),s("annotation",{encoding:"application/x-tex"},"Z_{t_s}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.9334em","vertical-align":"-0.2501em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.07153em"}},"Z"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2806em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0715em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"t"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1645em"}},[s("span",{style:{top:"-2.357em","margin-left":"0em","margin-right":"0.0714em"}},[s("span",{class:"pstrut",style:{height:"2.5em"}}),s("span",{class:"sizing reset-size3 size1 mtight"},[s("span",{class:"mord mathnormal mtight"},"s")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.143em"}},[s("span")])])])])])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2501em"}},[s("span")])])])])])])])]),n("分布与Cell Line的"),s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",null,"Z"),s("msub",null,[s("mi",null,"c"),s("mi",null,"s")])])]),s("annotation",{encoding:"application/x-tex"},"Z_{c_s}")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.9334em","vertical-align":"-0.2501em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.07153em"}},"Z"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.0715em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"c"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1645em"}},[s("span",{style:{top:"-2.357em","margin-left":"0em","margin-right":"0.0714em"}},[s("span",{class:"pstrut",style:{height:"2.5em"}}),s("span",{class:"sizing reset-size3 size1 mtight"},[s("span",{class:"mord mathnormal mtight"},"s")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.143em"}},[s("span")])])])])])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2501em"}},[s("span")])])])])])])])]),n("分布相一致")]),n("，以消除系统偏差（例如，批处理效应）。")],-1),m=a('<h4 id="_2-2-微调" tabindex="-1"><a class="header-anchor" href="#_2-2-微调" aria-hidden="true">#</a> 2.2 微调</h4><p>在微调阶段，在预训练好的CODE-AE中添加一个监督模型，并使用标记的Cell Line药物反应数据对细胞系进行进行训练。</p><h4 id="_2-3-推理" tabindex="-1"><a class="header-anchor" href="#_2-3-推理" aria-hidden="true">#</a> 2.3 推理</h4><p>在推理阶段，首先从预训练好的CODE-AE中获得患者的embedding，再通过第二阶段微调好的模型来预测患者对药物的反应。</p><h2 id="_3-实验内容" tabindex="-1"><a class="header-anchor" href="#_3-实验内容" aria-hidden="true">#</a> 3 实验内容</h2><h4 id="_3-1-基础实验——映射效果-⭐" tabindex="-1"><a class="header-anchor" href="#_3-1-基础实验——映射效果-⭐" aria-hidden="true">#</a> 3.1 基础实验——映射效果（⭐）</h4><figure><img src="'+p+'" alt="image-20230404165810372" tabindex="0" loading="lazy"><figcaption>image-20230404165810372</figcaption></figure><p>​ <em>a. 原始表达；b.标准ae；c. CODE-AE-ADV</em></p><h4 id="_3-2-消除生物变量" tabindex="-1"><a class="header-anchor" href="#_3-2-消除生物变量" aria-hidden="true">#</a> 3.2 消除生物变量</h4><p>当应用从男性数据中训练出来的模型来预测女性癌症亚型时，CODE-AE-ADV的表现略低于CORAL，但差异没有统计学意义。</p><h4 id="_3-3-code-ae改善了对体外药物反应的预测" tabindex="-1"><a class="header-anchor" href="#_3-3-code-ae改善了对体外药物反应的预测" aria-hidden="true">#</a> 3.3 CODE-AE改善了对体外药物反应的预测</h4><p>评估CODE-AE-ADV是否可以使用Cell Line训练好的模型预测患者对新化合物的特异性反应。</p><p>使用了来自PDTC的体外药物反应数据：图为47个药物作用在体外患者上的效果与预测结果的AUROC和AUPRC值的情况。</p><img src="'+e+'" alt="image-20230404185752020" style="zoom:80%;"><h4 id="_3-4-code-ae-adv在个性化医疗中的应用" tabindex="-1"><a class="header-anchor" href="#_3-4-code-ae-adv在个性化医疗中的应用" aria-hidden="true">#</a> 3.4 CODE-AE-ADV在个性化医疗中的应用</h4><h3 id="_4-方法" tabindex="-1"><a class="header-anchor" href="#_4-方法" aria-hidden="true">#</a> 4 方法</h3><h4 id="_4-1-code-ae-base" tabindex="-1"><a class="header-anchor" href="#_4-1-code-ae-base" aria-hidden="true">#</a> 4.1 CODE-AE-BASE</h4><h5 id="model" tabindex="-1"><a class="header-anchor" href="#model" aria-hidden="true">#</a> MODEL</h5>',18),d=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mtable",{width:"100%"},[s("mtr",null,[s("mtd",{width:"50%"}),s("mtd",null,[s("mrow",null,[s("mover",{accent:"true"},[s("msup",null,[s("mi",{mathvariant:"bold"},"x"),s("mrow",null,[s("mo",{stretchy:"false"},"("),s("mi",null,"l"),s("mo",{stretchy:"false"},")")])]),s("mo",{stretchy:"true"},"^")]),s("mo",null,"="),s("mi",null,"D"),s("mrow",null,[s("mo",{fence:"true"},"("),s("msub",null,[s("mi",{mathvariant:"bold"},"E"),s("mi",{mathvariant:"normal"},"s")]),s("mrow",null,[s("mo",{fence:"true"},"("),s("msup",null,[s("mi",{mathvariant:"bold"},"x"),s("mrow",null,[s("mo",{stretchy:"false"},"("),s("mi",null,"l"),s("mo",{stretchy:"false"},")")])]),s("mo",{fence:"true"},")")]),s("mo",null,"⨁"),s("msub",null,[s("mi",{mathvariant:"bold"},"E"),s("mi",{mathvariant:"normal"},"p")]),s("mrow",null,[s("mo",{fence:"true"},"("),s("msup",null,[s("mi",{mathvariant:"bold"},"x"),s("mrow",null,[s("mo",{stretchy:"false"},"("),s("mi",null,"l"),s("mo",{stretchy:"false"},")")])]),s("mo",{fence:"true"},")")]),s("mo",{fence:"true"},")")])])]),s("mtd",{width:"50%"}),s("mtd",null,[s("mtext",null,"(1)")])])]),s("annotation",{encoding:"application/x-tex"}," \\widehat{\\mathbf{x}^{(l)}}=D\\left(\\mathbf{E}_{\\mathrm{s}}\\left(\\mathbf{x}^{(l)}\\right) \\bigoplus \\mathbf{E}_{\\mathrm{p}}\\left(\\mathbf{x}^{(l)}\\right)\\right) \\tag1 ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.054em"}}),s("span",{class:"mord accent"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.054em"}},[s("span",{style:{top:"-3em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathbf"},"x"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.814em"}},[s("span",{style:{top:"-2.989em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mopen mtight"},"("),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mclose mtight"},")")])])])])])])])])]),s("span",{class:"svg-align",style:{top:"-3.814em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{style:{height:"0.24em"}},[s("svg",{xmlns:"http://www.w3.org/2000/svg",width:"100%",height:"0.24em",viewBox:"0 0 1062 239",preserveAspectRatio:"none"},[s("path",{d:`M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22
c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z`})])])])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.8em","vertical-align":"-0.65em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.02778em"}},"D"),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"minner"},[s("span",{class:"mopen delimcenter",style:{top:"0em"}},[s("span",{class:"delimsizing size2"},"(")]),s("span",{class:"mord"},[s("span",{class:"mord mathbf"},"E"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathrm mtight"},"s")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"minner"},[s("span",{class:"mopen delimcenter",style:{top:"0em"}},[s("span",{class:"delimsizing size2"},"(")]),s("span",{class:"mord"},[s("span",{class:"mord mathbf"},"x"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.938em"}},[s("span",{style:{top:"-3.113em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mopen mtight"},"("),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mclose mtight"},")")])])])])])])])]),s("span",{class:"mclose delimcenter",style:{top:"0em"}},[s("span",{class:"delimsizing size2"},")")])]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mop op-symbol large-op",style:{position:"relative",top:"0em"}},"⨁"),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathbf"},"E"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathrm mtight"},"p")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2861em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"minner"},[s("span",{class:"mopen delimcenter",style:{top:"0em"}},[s("span",{class:"delimsizing size2"},"(")]),s("span",{class:"mord"},[s("span",{class:"mord mathbf"},"x"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.938em"}},[s("span",{style:{top:"-3.113em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mopen mtight"},"("),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mclose mtight"},")")])])])])])])])]),s("span",{class:"mclose delimcenter",style:{top:"0em"}},[s("span",{class:"delimsizing size2"},")")])]),s("span",{class:"mclose delimcenter",style:{top:"0em"}},[s("span",{class:"delimsizing size2"},")")])])]),s("span",{class:"tag"},[s("span",{class:"strut",style:{height:"1.8em","vertical-align":"-0.65em"}}),s("span",{class:"mord text"},[s("span",{class:"mord"},"("),s("span",{class:"mord"},[s("span",{class:"mord"},"1")]),s("span",{class:"mord"},")")])])])])])],-1),k=s("h5",{id:"loss",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#loss","aria-hidden":"true"},"#"),n(" Loss")],-1),v=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mtable",{width:"100%"},[s("mtr",null,[s("mtd",{width:"50%"}),s("mtd",null,[s("mrow",null,[s("msub",null,[s("mi",{mathvariant:"script"},"L"),s("mtext",null,"recon ")]),s("mo",null,"="),s("mfrac",null,[s("mn",null,"1"),s("msub",null,[s("mi",null,"N"),s("mi",{mathvariant:"normal"},"c")])]),s("munderover",null,[s("mo",null,"∑"),s("mrow",null,[s("mi",null,"i"),s("mo",null,"="),s("mn",null,"1")]),s("msub",null,[s("mi",null,"N"),s("mi",{mathvariant:"normal"},"c")])]),s("msubsup",null,[s("mrow",null,[s("mo",{fence:"true"},"∥"),s("msubsup",null,[s("mi",{mathvariant:"bold"},"x"),s("mi",{mathvariant:"normal"},"c"),s("mrow",null,[s("mo",{stretchy:"false"},"("),s("mi",null,"i"),s("mo",{stretchy:"false"},")")])]),s("mo",null,"−"),s("mover",{accent:"true"},[s("msubsup",null,[s("mi",{mathvariant:"bold"},"x"),s("mi",{mathvariant:"normal"},"c"),s("mrow",null,[s("mo",{stretchy:"false"},"("),s("mi",null,"i"),s("mo",{stretchy:"false"},")")])]),s("mo",{stretchy:"true"},"^")]),s("mo",{fence:"true"},"∥")]),s("mn",null,"2"),s("mn",null,"2")]),s("mo",null,"+"),s("mfrac",null,[s("mn",null,"1"),s("msub",null,[s("mi",null,"N"),s("mi",{mathvariant:"normal"},"t")])]),s("munderover",null,[s("mo",null,"∑"),s("mrow",null,[s("mi",null,"i"),s("mo",null,"="),s("mn",null,"1")]),s("msub",null,[s("mi",null,"N"),s("mi",{mathvariant:"normal"},"t")])]),s("msubsup",null,[s("mrow",null,[s("mo",{fence:"true"},"∥"),s("msubsup",null,[s("mi",{mathvariant:"bold"},"x"),s("mi",{mathvariant:"normal"},"t"),s("mrow",null,[s("mo",{stretchy:"false"},"("),s("mi",null,"i"),s("mo",{stretchy:"false"},")")])]),s("mo",null,"−"),s("mover",{accent:"true"},[s("msubsup",null,[s("mi",{mathvariant:"bold"},"x"),s("mi",{mathvariant:"normal"},"t"),s("mrow",null,[s("mo",{stretchy:"false"},"("),s("mi",null,"i"),s("mo",{stretchy:"false"},")")])]),s("mo",{stretchy:"true"},"^")]),s("mo",{fence:"true"},"∥")]),s("mn",null,"2"),s("mn",null,"2")])])]),s("mtd",{width:"50%"}),s("mtd",null,[s("mtext",null,"(Reco Loss, 2)")])])]),s("annotation",{encoding:"application/x-tex"}," \\mathcal{L}_{\\text {recon }}=\\frac{1}{N_{\\mathrm{c}}} \\sum_{i=1}^{N_{\\mathrm{c}}}\\left\\|\\mathbf{x}_{\\mathrm{c}}^{(i)}-\\widehat{\\mathbf{x}_{\\mathrm{c}}^{(i)}}\\right\\|_{2}^{2}+\\frac{1}{N_{\\mathrm{t}}} \\sum_{i=1}^{N_{\\mathrm{t}}}\\left\\|\\mathbf{x}_{\\mathrm{t}}^{(i)}-\\widehat{\\mathbf{x}_{\\mathrm{t}}^{(i)}}\\right\\|_{2}^{2} \\tag{Reco Loss, 2} ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathcal"},"L"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord text mtight"},[s("span",{class:"mord mtight"},"recon ")])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"3.1171em","vertical-align":"-1.2777em"}}),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.3214em"}},[s("span",{style:{top:"-2.314em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.109em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathrm mtight"},"c")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.677em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.836em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mop op-limits"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.8394em"}},[s("span",{style:{top:"-1.8723em","margin-left":"0em"}},[s("span",{class:"pstrut",style:{height:"3.05em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"i"),s("span",{class:"mrel mtight"},"="),s("span",{class:"mord mtight"},"1")])])]),s("span",{style:{top:"-3.05em"}},[s("span",{class:"pstrut",style:{height:"3.05em"}}),s("span",null,[s("span",{class:"mop op-symbol large-op"},"∑")])]),s("span",{style:{top:"-4.3111em","margin-left":"0em"}},[s("span",{class:"pstrut",style:{height:"3.05em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.10903em"}},"N"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1645em"}},[s("span",{style:{top:"-2.357em","margin-left":"-0.109em","margin-right":"0.0714em"}},[s("span",{class:"pstrut",style:{height:"2.5em"}}),s("span",{class:"sizing reset-size3 size1 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathrm mtight"},"c")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.143em"}},[s("span")])])])])])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.2777em"}},[s("span")])])])]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"minner"},[s("span",{class:"minner"},[s("span",{class:"mopen"},[s("span",{class:"delimsizing mult"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.45em"}},[s("span",{style:{top:"-3.45em"}},[s("span",{class:"pstrut",style:{height:"4.4em"}}),s("span",{style:{width:"0.556em",height:"2.400em"}},[s("svg",{xmlns:"http://www.w3.org/2000/svg",width:"0.556em",height:"2.400em",viewBox:"0 0 556 2400"},[s("path",{d:`M145 15 v585 v1200 v585 c2.667,10,9.667,15,21,15
c10,0,16.667,-5,20,-15 v-585 v-1200 v-585 c-2.667,-10,-9.667,-15,-21,-15
c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v1200 v585 h43z
M367 15 v585 v1200 v585 c2.667,10,9.667,15,21,15
c10,0,16.667,-5,20,-15 v-585 v-1200 v-585 c-2.667,-10,-9.667,-15,-21,-15
c-10,0,-16.667,5,-20,15z M410 15 H367 v585 v1200 v585 h43z`})])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.95em"}},[s("span")])])])])]),s("span",{class:"mord"},[s("span",{class:"mord mathbf"},"x"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.938em"}},[s("span",{style:{top:"-2.453em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathrm mtight"},"c")])])]),s("span",{style:{top:"-3.113em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mopen mtight"},"("),s("span",{class:"mord mathnormal mtight"},"i"),s("span",{class:"mclose mtight"},")")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.247em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord accent"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.2848em"}},[s("span",{style:{top:"-3.0448em"}},[s("span",{class:"pstrut",style:{height:"3.0448em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathbf"},"x"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.0448em"}},[s("span",{style:{top:"-2.5834em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathrm mtight"},"c")])])]),s("span",{style:{top:"-3.2198em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mopen mtight"},"("),s("span",{class:"mord mathnormal mtight"},"i"),s("span",{class:"mclose mtight"},")")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1166em"}},[s("span")])])])])])]),s("span",{class:"svg-align",style:{top:"-4.0896em"}},[s("span",{class:"pstrut",style:{height:"3.0448em"}}),s("span",{style:{height:"0.24em"}},[s("svg",{xmlns:"http://www.w3.org/2000/svg",width:"100%",height:"0.24em",viewBox:"0 0 1062 239",preserveAspectRatio:"none"},[s("path",{d:`M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22
c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z`})])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1166em"}},[s("span")])])])]),s("span",{class:"mclose"},[s("span",{class:"delimsizing mult"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.45em"}},[s("span",{style:{top:"-3.45em"}},[s("span",{class:"pstrut",style:{height:"4.4em"}}),s("span",{style:{width:"0.556em",height:"2.400em"}},[s("svg",{xmlns:"http://www.w3.org/2000/svg",width:"0.556em",height:"2.400em",viewBox:"0 0 556 2400"},[s("path",{d:`M145 15 v585 v1200 v585 c2.667,10,9.667,15,21,15
c10,0,16.667,-5,20,-15 v-585 v-1200 v-585 c-2.667,-10,-9.667,-15,-21,-15
c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v1200 v585 h43z
M367 15 v585 v1200 v585 c2.667,10,9.667,15,21,15
c10,0,16.667,-5,20,-15 v-585 v-1200 v-585 c-2.667,-10,-9.667,-15,-21,-15
c-10,0,-16.667,5,-20,15z M410 15 H367 v585 v1200 v585 h43z`})])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.95em"}},[s("span")])])])])])]),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.654em"}},[s("span",{style:{top:"-1.7003em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{style:{top:"-3.9029em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"2")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.9997em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"3.1171em","vertical-align":"-1.2777em"}}),s("span",{class:"mord"},[s("span",{class:"mopen nulldelimiter"}),s("span",{class:"mfrac"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.3214em"}},[s("span",{style:{top:"-2.314em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},[s("span",{class:"mord mathnormal",style:{"margin-right":"0.10903em"}},"N"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2806em"}},[s("span",{style:{top:"-2.55em","margin-left":"-0.109em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathrm mtight"},"t")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])]),s("span",{style:{top:"-3.23em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"frac-line",style:{"border-bottom-width":"0.04em"}})]),s("span",{style:{top:"-3.677em"}},[s("span",{class:"pstrut",style:{height:"3em"}}),s("span",{class:"mord"},[s("span",{class:"mord"},"1")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.836em"}},[s("span")])])])]),s("span",{class:"mclose nulldelimiter"})]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"mop op-limits"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.8394em"}},[s("span",{style:{top:"-1.8723em","margin-left":"0em"}},[s("span",{class:"pstrut",style:{height:"3.05em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"i"),s("span",{class:"mrel mtight"},"="),s("span",{class:"mord mtight"},"1")])])]),s("span",{style:{top:"-3.05em"}},[s("span",{class:"pstrut",style:{height:"3.05em"}}),s("span",null,[s("span",{class:"mop op-symbol large-op"},"∑")])]),s("span",{style:{top:"-4.3111em","margin-left":"0em"}},[s("span",{class:"pstrut",style:{height:"3.05em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.10903em"}},"N"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2963em"}},[s("span",{style:{top:"-2.357em","margin-left":"-0.109em","margin-right":"0.0714em"}},[s("span",{class:"pstrut",style:{height:"2.5em"}}),s("span",{class:"sizing reset-size3 size1 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathrm mtight"},"t")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.143em"}},[s("span")])])])])])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.2777em"}},[s("span")])])])]),s("span",{class:"mspace",style:{"margin-right":"0.1667em"}}),s("span",{class:"minner"},[s("span",{class:"minner"},[s("span",{class:"mopen"},[s("span",{class:"delimsizing mult"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.45em"}},[s("span",{style:{top:"-3.45em"}},[s("span",{class:"pstrut",style:{height:"4.4em"}}),s("span",{style:{width:"0.556em",height:"2.400em"}},[s("svg",{xmlns:"http://www.w3.org/2000/svg",width:"0.556em",height:"2.400em",viewBox:"0 0 556 2400"},[s("path",{d:`M145 15 v585 v1200 v585 c2.667,10,9.667,15,21,15
c10,0,16.667,-5,20,-15 v-585 v-1200 v-585 c-2.667,-10,-9.667,-15,-21,-15
c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v1200 v585 h43z
M367 15 v585 v1200 v585 c2.667,10,9.667,15,21,15
c10,0,16.667,-5,20,-15 v-585 v-1200 v-585 c-2.667,-10,-9.667,-15,-21,-15
c-10,0,-16.667,5,-20,15z M410 15 H367 v585 v1200 v585 h43z`})])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.95em"}},[s("span")])])])])]),s("span",{class:"mord"},[s("span",{class:"mord mathbf"},"x"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.0448em"}},[s("span",{style:{top:"-2.4542em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathrm mtight"},"t")])])]),s("span",{style:{top:"-3.2198em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mopen mtight"},"("),s("span",{class:"mord mathnormal mtight"},"i"),s("span",{class:"mclose mtight"},")")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2458em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"−"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mord accent"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.2848em"}},[s("span",{style:{top:"-3.0448em"}},[s("span",{class:"pstrut",style:{height:"3.0448em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathbf"},"x"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.0448em"}},[s("span",{style:{top:"-2.4542em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathrm mtight"},"t")])])]),s("span",{style:{top:"-3.2198em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mopen mtight"},"("),s("span",{class:"mord mathnormal mtight"},"i"),s("span",{class:"mclose mtight"},")")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2458em"}},[s("span")])])])])])]),s("span",{class:"svg-align",style:{top:"-4.0896em"}},[s("span",{class:"pstrut",style:{height:"3.0448em"}}),s("span",{style:{height:"0.24em"}},[s("svg",{xmlns:"http://www.w3.org/2000/svg",width:"100%",height:"0.24em",viewBox:"0 0 1062 239",preserveAspectRatio:"none"},[s("path",{d:`M529 0h5l519 115c5 1 9 5 9 10 0 1-1 2-1 3l-4 22
c-1 5-5 9-11 9h-2L532 67 19 159h-2c-5 0-9-4-11-9l-5-22c-1-6 2-12 8-13z`})])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2458em"}},[s("span")])])])]),s("span",{class:"mclose"},[s("span",{class:"delimsizing mult"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.45em"}},[s("span",{style:{top:"-3.45em"}},[s("span",{class:"pstrut",style:{height:"4.4em"}}),s("span",{style:{width:"0.556em",height:"2.400em"}},[s("svg",{xmlns:"http://www.w3.org/2000/svg",width:"0.556em",height:"2.400em",viewBox:"0 0 556 2400"},[s("path",{d:`M145 15 v585 v1200 v585 c2.667,10,9.667,15,21,15
c10,0,16.667,-5,20,-15 v-585 v-1200 v-585 c-2.667,-10,-9.667,-15,-21,-15
c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v1200 v585 h43z
M367 15 v585 v1200 v585 c2.667,10,9.667,15,21,15
c10,0,16.667,-5,20,-15 v-585 v-1200 v-585 c-2.667,-10,-9.667,-15,-21,-15
c-10,0,-16.667,5,-20,15z M410 15 H367 v585 v1200 v585 h43z`})])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.95em"}},[s("span")])])])])])]),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.654em"}},[s("span",{style:{top:"-1.7003em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{style:{top:"-3.9029em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},"2")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.9997em"}},[s("span")])])])])])]),s("span",{class:"tag"},[s("span",{class:"strut",style:{height:"3.1171em","vertical-align":"-1.2777em"}}),s("span",{class:"mord text"},[s("span",{class:"mord"},"("),s("span",{class:"mord"},[s("span",{class:"mord"},"Reco Loss, 2")]),s("span",{class:"mord"},")")])])])])])],-1),h=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mtable",{width:"100%"},[s("mtr",null,[s("mtd",{width:"50%"}),s("mtd",null,[s("mrow",null,[s("msub",null,[s("mi",{mathvariant:"script"},"L"),s("mtext",null,"diff ")]),s("mo",null,"="),s("msubsup",null,[s("mrow",null,[s("mo",{fence:"true"},"∥"),s("msubsup",null,[s("mi",{mathvariant:"bold"},"Z"),s("msub",null,[s("mi",{mathvariant:"normal"},"C"),s("mi",{mathvariant:"normal"},"s")]),s("mi",null,"T")]),s("msub",null,[s("mi",{mathvariant:"bold"},"Z"),s("msub",null,[s("mi",{mathvariant:"normal"},"C"),s("mi",{mathvariant:"normal"},"p")])]),s("mo",{fence:"true"},"∥")]),s("mi",null,"F"),s("mn",null,"2")]),s("mo",null,"+"),s("msubsup",null,[s("mrow",null,[s("mo",{fence:"true"},"∥"),s("msubsup",null,[s("mi",{mathvariant:"bold"},"Z"),s("msub",null,[s("mi",{mathvariant:"normal"},"L"),s("mi",{mathvariant:"normal"},"s")]),s("mi",null,"T")]),s("msub",null,[s("mi",{mathvariant:"bold"},"Z"),s("msub",null,[s("mi",{mathvariant:"normal"},"t"),s("mi",{mathvariant:"normal"},"p")])]),s("mo",{fence:"true"},"∥")]),s("mi",null,"F"),s("mn",null,"2")])])]),s("mtd",{width:"50%"}),s("mtd",null,[s("mtext",null,"(Diff Loss, 3)")])])]),s("annotation",{encoding:"application/x-tex"}," \\mathcal{L}_{\\text {diff }}=\\left\\|\\mathbf{Z}_{\\mathrm{C}_{\\mathrm{s}}}^T \\mathbf{Z}_{\\mathrm{C}_{\\mathrm{p}}}\\right\\|_F^2+\\left\\|\\mathbf{Z}_{\\mathrm{L}_{\\mathrm{s}}}^T \\mathbf{Z}_{\\mathrm{t}_{\\mathrm{p}}}\\right\\|_F^2 \\tag{Diff Loss, 3} ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathcal"},"L"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3361em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord text mtight"},[s("span",{class:"mord mtight"},"diff ")])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.495em","vertical-align":"-0.3997em"}}),s("span",{class:"minner"},[s("span",{class:"minner"},[s("span",{class:"mopen"},[s("span",{class:"delimsizing mult"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.85em"}},[s("span",{style:{top:"-2.85em"}},[s("span",{class:"pstrut",style:{height:"3.2em"}}),s("span",{style:{width:"0.556em",height:"1.200em"}},[s("svg",{xmlns:"http://www.w3.org/2000/svg",width:"0.556em",height:"1.200em",viewBox:"0 0 556 1200"},[s("path",{d:`M145 15 v585 v0 v585 c2.667,10,9.667,15,21,15
c10,0,16.667,-5,20,-15 v-585 v0 v-585 c-2.667,-10,-9.667,-15,-21,-15
c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v0 v585 h43z
M367 15 v585 v0 v585 c2.667,10,9.667,15,21,15
c10,0,16.667,-5,20,-15 v-585 v0 v-585 c-2.667,-10,-9.667,-15,-21,-15
c-10,0,-16.667,5,-20,15z M410 15 H367 v585 v0 v585 h43z`})])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.35em"}},[s("span")])])])])]),s("span",{class:"mord"},[s("span",{class:"mord mathbf"},"Z"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8913em"}},[s("span",{style:{top:"-2.453em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathrm mtight"},"C"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1645em"}},[s("span",{style:{top:"-2.357em","margin-left":"0em","margin-right":"0.0714em"}},[s("span",{class:"pstrut",style:{height:"2.5em"}}),s("span",{class:"sizing reset-size3 size1 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathrm mtight"},"s")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.143em"}},[s("span")])])])])])])])]),s("span",{style:{top:"-3.113em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.13889em"}},"T")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3471em"}},[s("span")])])])])]),s("span",{class:"mord"},[s("span",{class:"mord mathbf"},"Z"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3283em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathrm mtight"},"C"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1645em"}},[s("span",{style:{top:"-2.357em","margin-left":"0em","margin-right":"0.0714em"}},[s("span",{class:"pstrut",style:{height:"2.5em"}}),s("span",{class:"sizing reset-size3 size1 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathrm mtight"},"p")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2819em"}},[s("span")])])])])])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3473em"}},[s("span")])])])])]),s("span",{class:"mclose"},[s("span",{class:"delimsizing mult"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.85em"}},[s("span",{style:{top:"-2.85em"}},[s("span",{class:"pstrut",style:{height:"3.2em"}}),s("span",{style:{width:"0.556em",height:"1.200em"}},[s("svg",{xmlns:"http://www.w3.org/2000/svg",width:"0.556em",height:"1.200em",viewBox:"0 0 556 1200"},[s("path",{d:`M145 15 v585 v0 v585 c2.667,10,9.667,15,21,15
c10,0,16.667,-5,20,-15 v-585 v0 v-585 c-2.667,-10,-9.667,-15,-21,-15
c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v0 v585 h43z
M367 15 v585 v0 v585 c2.667,10,9.667,15,21,15
c10,0,16.667,-5,20,-15 v-585 v0 v-585 c-2.667,-10,-9.667,-15,-21,-15
c-10,0,-16.667,5,-20,15z M410 15 H367 v585 v0 v585 h43z`})])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.35em"}},[s("span")])])])])])]),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.0953em"}},[s("span",{style:{top:"-2.3003em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.13889em"}},"F")])]),s("span",{style:{top:"-3.3442em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3997em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"1.495em","vertical-align":"-0.3997em"}}),s("span",{class:"minner"},[s("span",{class:"minner"},[s("span",{class:"mopen"},[s("span",{class:"delimsizing mult"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.85em"}},[s("span",{style:{top:"-2.85em"}},[s("span",{class:"pstrut",style:{height:"3.2em"}}),s("span",{style:{width:"0.556em",height:"1.200em"}},[s("svg",{xmlns:"http://www.w3.org/2000/svg",width:"0.556em",height:"1.200em",viewBox:"0 0 556 1200"},[s("path",{d:`M145 15 v585 v0 v585 c2.667,10,9.667,15,21,15
c10,0,16.667,-5,20,-15 v-585 v0 v-585 c-2.667,-10,-9.667,-15,-21,-15
c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v0 v585 h43z
M367 15 v585 v0 v585 c2.667,10,9.667,15,21,15
c10,0,16.667,-5,20,-15 v-585 v0 v-585 c-2.667,-10,-9.667,-15,-21,-15
c-10,0,-16.667,5,-20,15z M410 15 H367 v585 v0 v585 h43z`})])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.35em"}},[s("span")])])])])]),s("span",{class:"mord"},[s("span",{class:"mord mathbf"},"Z"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.8913em"}},[s("span",{style:{top:"-2.453em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathrm mtight"},"L"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1645em"}},[s("span",{style:{top:"-2.357em","margin-left":"0em","margin-right":"0.0714em"}},[s("span",{class:"pstrut",style:{height:"2.5em"}}),s("span",{class:"sizing reset-size3 size1 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathrm mtight"},"s")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.143em"}},[s("span")])])])])])])])]),s("span",{style:{top:"-3.113em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.13889em"}},"T")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3471em"}},[s("span")])])])])]),s("span",{class:"mord"},[s("span",{class:"mord mathbf"},"Z"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2806em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathrm mtight"},"t"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1645em"}},[s("span",{style:{top:"-2.357em","margin-left":"0em","margin-right":"0.0714em"}},[s("span",{class:"pstrut",style:{height:"2.5em"}}),s("span",{class:"sizing reset-size3 size1 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathrm mtight"},"p")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2819em"}},[s("span")])])])])])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3473em"}},[s("span")])])])])]),s("span",{class:"mclose"},[s("span",{class:"delimsizing mult"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.85em"}},[s("span",{style:{top:"-2.85em"}},[s("span",{class:"pstrut",style:{height:"3.2em"}}),s("span",{style:{width:"0.556em",height:"1.200em"}},[s("svg",{xmlns:"http://www.w3.org/2000/svg",width:"0.556em",height:"1.200em",viewBox:"0 0 556 1200"},[s("path",{d:`M145 15 v585 v0 v585 c2.667,10,9.667,15,21,15
c10,0,16.667,-5,20,-15 v-585 v0 v-585 c-2.667,-10,-9.667,-15,-21,-15
c-10,0,-16.667,5,-20,15z M188 15 H145 v585 v0 v585 h43z
M367 15 v585 v0 v585 c2.667,10,9.667,15,21,15
c10,0,16.667,-5,20,-15 v-585 v0 v-585 c-2.667,-10,-9.667,-15,-21,-15
c-10,0,-16.667,5,-20,15z M410 15 H367 v585 v0 v585 h43z`})])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.35em"}},[s("span")])])])])])]),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"1.0953em"}},[s("span",{style:{top:"-2.3003em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.13889em"}},"F")])]),s("span",{style:{top:"-3.3442em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},"2")])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3997em"}},[s("span")])])])])])]),s("span",{class:"tag"},[s("span",{class:"strut",style:{height:"1.495em","vertical-align":"-0.3997em"}}),s("span",{class:"mord text"},[s("span",{class:"mord"},"("),s("span",{class:"mord"},[s("span",{class:"mord"},"Diff Loss, 3")]),s("span",{class:"mord"},")")])])])])])],-1),g=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("msub",null,[s("mi",{mathvariant:"script"},"L"),s("mtext",null,"code-ae-base ")]),s("mo",null,"="),s("msub",null,[s("mi",{mathvariant:"script"},"L"),s("mtext",null,"recon ")]),s("mo",null,"+"),s("mi",null,"α"),s("msub",null,[s("mi",{mathvariant:"script"},"L"),s("mtext",null,"diff ")])]),s("annotation",{encoding:"application/x-tex"}," \\mathcal{L}_{\\text {code-ae-base }}=\\mathcal{L}_{\\text {recon }}+\\alpha \\mathcal{L}_{\\text {diff }} ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathcal"},"L"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3361em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord text mtight"},[s("span",{class:"mord mtight"},"code-ae-base ")])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathcal"},"L"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord text mtight"},[s("span",{class:"mord mtight"},"recon ")])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.0037em"}},"α"),s("span",{class:"mord"},[s("span",{class:"mord mathcal"},"L"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3361em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord text mtight"},[s("span",{class:"mord mtight"},"diff ")])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])])])],-1),_=s("h4",{id:"_4-2",tabindex:"-1"},[s("a",{class:"header-anchor",href:"#_4-2","aria-hidden":"true"},"#"),n(" 4.2")],-1),b=s("p",{class:"katex-block"},[s("span",{class:"katex-display"},[s("span",{class:"katex"},[s("span",{class:"katex-mathml"},[s("math",{xmlns:"http://www.w3.org/1998/Math/MathML",display:"block"},[s("semantics",null,[s("mrow",null,[s("mi",{mathvariant:"script"},"L"),s("mo",null,"="),s("msub",null,[s("mi",{mathvariant:"script"},"L"),s("mrow",null,[s("mi",null,"r"),s("mi",null,"e"),s("mi",null,"l"),s("mi",null,"a"),s("mi",null,"t"),s("mi",null,"i"),s("mi",null,"o"),s("mi",null,"n"),s("mtext",null," ")])]),s("mo",null,"+"),s("mi",null,"α"),s("msub",null,[s("mi",{mathvariant:"script"},"L"),s("mrow",null,[s("mi",null,"d"),s("mi",null,"i"),s("mi",null,"f"),s("mi",null,"f")])]),s("mo",null,"+"),s("mi",null,"β"),s("msub",null,[s("mi",{mathvariant:"script"},"L"),s("mrow",null,[s("mi",null,"r"),s("mi",null,"e"),s("mi",null,"c")])]),s("mo",null,"+"),s("mi",null,"γ"),s("msub",null,[s("mi",{mathvariant:"script"},"L"),s("mrow",null,[s("mi",null,"a"),s("mi",null,"d"),s("mi",null,"v")])])]),s("annotation",{encoding:"application/x-tex"}," \\mathcal{L}=\\mathcal{L}_{relation~}+\\alpha\\mathcal{L}_{diff}+\\beta\\mathcal{L}_{rec}+\\gamma\\mathcal{L}_{adv} ")])])]),s("span",{class:"katex-html","aria-hidden":"true"},[s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.6833em"}}),s("span",{class:"mord mathcal"},"L"),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}}),s("span",{class:"mrel"},"="),s("span",{class:"mspace",style:{"margin-right":"0.2778em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8333em","vertical-align":"-0.15em"}}),s("span",{class:"mord"},[s("span",{class:"mord mathcal"},"L"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3361em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"re"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.01968em"}},"l"),s("span",{class:"mord mathnormal mtight"},"a"),s("span",{class:"mord mathnormal mtight"},"t"),s("span",{class:"mord mathnormal mtight"},"i"),s("span",{class:"mord mathnormal mtight"},"o"),s("span",{class:"mord mathnormal mtight"},"n"),s("span",{class:"mspace nobreak mtight"},[s("span",{class:"mtight"}," ")])])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.9694em","vertical-align":"-0.2861em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.0037em"}},"α"),s("span",{class:"mord"},[s("span",{class:"mord mathcal"},"L"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3361em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"d"),s("span",{class:"mord mathnormal mtight"},"i"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.10764em"}},"ff")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.2861em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8889em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05278em"}},"β"),s("span",{class:"mord"},[s("span",{class:"mord mathcal"},"L"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.1514em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"rec")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])]),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}}),s("span",{class:"mbin"},"+"),s("span",{class:"mspace",style:{"margin-right":"0.2222em"}})]),s("span",{class:"base"},[s("span",{class:"strut",style:{height:"0.8778em","vertical-align":"-0.1944em"}}),s("span",{class:"mord mathnormal",style:{"margin-right":"0.05556em"}},"γ"),s("span",{class:"mord"},[s("span",{class:"mord mathcal"},"L"),s("span",{class:"msupsub"},[s("span",{class:"vlist-t vlist-t2"},[s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.3361em"}},[s("span",{style:{top:"-2.55em","margin-left":"0em","margin-right":"0.05em"}},[s("span",{class:"pstrut",style:{height:"2.7em"}}),s("span",{class:"sizing reset-size6 size3 mtight"},[s("span",{class:"mord mtight"},[s("span",{class:"mord mathnormal mtight"},"a"),s("span",{class:"mord mathnormal mtight"},"d"),s("span",{class:"mord mathnormal mtight",style:{"margin-right":"0.03588em"}},"v")])])])]),s("span",{class:"vlist-s"},"​")]),s("span",{class:"vlist-r"},[s("span",{class:"vlist",style:{height:"0.15em"}},[s("span")])])])])])])])])])],-1),y=a(`<h3 id="_5-代码" tabindex="-1"><a class="header-anchor" href="#_5-代码" aria-hidden="true">#</a> 5 代码</h3><h4 id="_5-1-目录结构🌳" tabindex="-1"><a class="header-anchor" href="#_5-1-目录结构🌳" aria-hidden="true">#</a> 5.1 目录结构🌳</h4><p>服务器：/home/hht/Myapps/Transfer_Project/Repeat_CODE_AE/CODE-AE-main/</p><details class="hint-container details"><summary>doc_tree</summary><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code><span class="token builtin class-name">.</span>
├── code
│   ├── adae_hyper_main.py
│   ├── ae.py
│   ├── base_ae.py
│   ├── data_config.py
│   ├── data_preprocessing.py
│   ├── data.py
│   ├── Dockerfile
│   ├── drug_ft_hyper_main.py
│   ├── drug_inference_main.py
│   ├── dsn_ae.py
│   ├── encoder_decoder.py
│   ├── evaluation_utils.py
│   ├── fine_tuning.py
│   ├── generate_encoded_features.py
│   ├── generate_plots.ipynb
│   ├── gradient_reversal.py
│   ├── inference.py
│   ├── loss_and_metrics.py
│   ├── ml_baseline.py
│   ├── mlp_main.py
│   ├── mlp.py
│   ├── model_save
│   ├── parsing_utils.py
│   ├── pretrain_hyper_main.py
│   ├── reproduce_fig4.py
│   ├── tcrp_main.py
│   ├── train_adae.py
│   ├── train_ae.py
│   ├── train_code_adv.py  
│   ├── train_code_base.py
│   ├── train_code_mmd.py  <span class="token comment"># 详细介绍</span>
│   ├── train_coral.py
│   ├── train_dae.py
│   ├── train_dsna.py
│   ├── train_dsn.py
│   ├── train_dsnw.py
│   ├── train_vae.py
│   ├── types_.py
│   ├── vaen_main.py
│   └── vae.py
├── data
│   ├── pdtc_gdsc_drug_mapping.csv
│   └── tcga_gdsc_drug_mapping.csv
├── figs
│   └── architecture.png
├── intermediate_results
│   ├── encoded_features
│   ├── plot_data
│   └── tcga_prediction
├── LICENSE
└── README.md
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h4 id="_5-2-train-code-mmd-py" tabindex="-1"><a class="header-anchor" href="#_5-2-train-code-mmd-py" aria-hidden="true">#</a> 5.2 train_code_mmd.py</h4><p>其中一共包含三个函数：</p><p>​ <code>eval_dsnae_epoch()</code>：接受四个参数，通过传入<code>model</code>与<code>dataloader</code>，返回添加了最新损失的训练记录history<code>{&#39;loss&#39;: [loss], &#39;recons_loss&#39;: [recons_loss], &#39;ortho_loss&#39;: [ortho_loss]}</code></p><p>​ <code>dsn_ae_train_step()</code>：接受八个参数，通过传入两个模型<code>s_dsnae</code>，<code>t_dsnae</code>，<code>batch</code>，<code>optimizer</code>，返回添加了最新损失的训练记录history<code>{&#39;loss&#39;: [loss], &#39;recons_loss&#39;: [recons_loss], &#39;ortho_loss&#39;: [ortho_loss], &#39;mmd_loss&#39;: [mmd_loss]}</code></p><p>​ <code>train_code_mmd()</code> ：传入dataloader即可，函数内实现s_dsnae和t_dsnae的实例化，通过调用上述两个函数==eval_dsnae_epoch()<mark>和</mark>dsn_ae_train_step()==训练code_mmd</p><details class="hint-container details"><summary>train_code_mmd.py</summary><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> os
<span class="token keyword">from</span> itertools <span class="token keyword">import</span> chain

<span class="token keyword">from</span> dsn_ae <span class="token keyword">import</span> DSNAE
<span class="token keyword">from</span> evaluation_utils <span class="token keyword">import</span> <span class="token operator">*</span>
<span class="token keyword">from</span> mlp <span class="token keyword">import</span> MLP
<span class="token keyword">from</span> loss_and_metrics <span class="token keyword">import</span> mmd_loss
<span class="token keyword">from</span> collections <span class="token keyword">import</span> OrderedDict

<span class="token keyword">def</span> <span class="token function">eval_dsnae_epoch</span><span class="token punctuation">(</span>model<span class="token punctuation">,</span> data_loader<span class="token punctuation">,</span> device<span class="token punctuation">,</span> history<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
	对DSNAE模型进行一轮评估，计算损失并更新历史记录。
	总的来说，接受四个参数：model, data_loader, device, history，然后输出更新后的history字典

    :param model: DSNAE模型
    :param data_loader: 数据集的数据加载器
    :param device: 训练设备
    :param history: 历史记录字典
    :return: 更新后的历史记录字典
    &quot;&quot;&quot;</span>
    model<span class="token punctuation">.</span><span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    
    <span class="token comment"># 定义损失的平均值字典</span>
    avg_loss_dict <span class="token operator">=</span> defaultdict<span class="token punctuation">(</span><span class="token builtin">float</span><span class="token punctuation">)</span>
    <span class="token keyword">for</span> x_batch <span class="token keyword">in</span> data_loader<span class="token punctuation">:</span>
        x_batch <span class="token operator">=</span> x_batch<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>to<span class="token punctuation">(</span>device<span class="token punctuation">)</span>
        <span class="token keyword">with</span> torch<span class="token punctuation">.</span>no_grad<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            loss_dict <span class="token operator">=</span> model<span class="token punctuation">.</span>loss_function<span class="token punctuation">(</span><span class="token operator">*</span><span class="token punctuation">(</span>model<span class="token punctuation">(</span>x_batch<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            <span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token keyword">in</span> loss_dict<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
                avg_loss_dict<span class="token punctuation">[</span>k<span class="token punctuation">]</span> <span class="token operator">+=</span> v<span class="token punctuation">.</span>cpu<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>detach<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>item<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token builtin">len</span><span class="token punctuation">(</span>data_loader<span class="token punctuation">)</span>

    <span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token keyword">in</span> avg_loss_dict<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        history<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>v<span class="token punctuation">)</span>
    <span class="token keyword">return</span> history


<span class="token keyword">def</span> <span class="token function">dsn_ae_train_step</span><span class="token punctuation">(</span>s_dsnae<span class="token punctuation">,</span> t_dsnae<span class="token punctuation">,</span> s_batch<span class="token punctuation">,</span> t_batch<span class="token punctuation">,</span> device<span class="token punctuation">,</span> optimizer<span class="token punctuation">,</span> history<span class="token punctuation">,</span> scheduler<span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    
    :param s_dsnae: 源域编码器模型
    :param t_dsnae: 目标域编码器模型
    :param s_batch: 源域batch
    :param t_batch: 目标域batch
    :param device: 训练设备
    :param optimizer: 优化器
    :param history: 历史记录字典
    :param scheduler: 可选的学习率调度器
    :return: 
    &quot;&quot;&quot;</span>
    s_dsnae<span class="token punctuation">.</span>zero_grad<span class="token punctuation">(</span><span class="token punctuation">)</span>
    t_dsnae<span class="token punctuation">.</span>zero_grad<span class="token punctuation">(</span><span class="token punctuation">)</span>
    s_dsnae<span class="token punctuation">.</span>train<span class="token punctuation">(</span><span class="token punctuation">)</span>
    t_dsnae<span class="token punctuation">.</span>train<span class="token punctuation">(</span><span class="token punctuation">)</span>

    s_x <span class="token operator">=</span> s_batch<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>to<span class="token punctuation">(</span>device<span class="token punctuation">)</span>
    t_x <span class="token operator">=</span> t_batch<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>to<span class="token punctuation">(</span>device<span class="token punctuation">)</span>

    s_code <span class="token operator">=</span> s_dsnae<span class="token punctuation">.</span>encode<span class="token punctuation">(</span>s_x<span class="token punctuation">)</span>
    t_code <span class="token operator">=</span> t_dsnae<span class="token punctuation">.</span>encode<span class="token punctuation">(</span>t_x<span class="token punctuation">)</span>

    s_loss_dict <span class="token operator">=</span> s_dsnae<span class="token punctuation">.</span>loss_function<span class="token punctuation">(</span><span class="token operator">*</span>s_dsnae<span class="token punctuation">(</span>s_x<span class="token punctuation">)</span><span class="token punctuation">)</span>
    t_loss_dict <span class="token operator">=</span> t_dsnae<span class="token punctuation">.</span>loss_function<span class="token punctuation">(</span><span class="token operator">*</span>t_dsnae<span class="token punctuation">(</span>t_x<span class="token punctuation">)</span><span class="token punctuation">)</span>

    optimizer<span class="token punctuation">.</span>zero_grad<span class="token punctuation">(</span><span class="token punctuation">)</span>
    m_loss <span class="token operator">=</span> mmd_loss<span class="token punctuation">(</span>source_features<span class="token operator">=</span>s_code<span class="token punctuation">,</span> target_features<span class="token operator">=</span>t_code<span class="token punctuation">,</span> device<span class="token operator">=</span>device<span class="token punctuation">)</span>
    loss <span class="token operator">=</span> s_loss_dict<span class="token punctuation">[</span><span class="token string">&#39;loss&#39;</span><span class="token punctuation">]</span> <span class="token operator">+</span> t_loss_dict<span class="token punctuation">[</span><span class="token string">&#39;loss&#39;</span><span class="token punctuation">]</span> <span class="token operator">+</span> m_loss
    loss<span class="token punctuation">.</span>backward<span class="token punctuation">(</span><span class="token punctuation">)</span>

    optimizer<span class="token punctuation">.</span>step<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">if</span> scheduler <span class="token keyword">is</span> <span class="token keyword">not</span> <span class="token boolean">None</span><span class="token punctuation">:</span>
        scheduler<span class="token punctuation">.</span>step<span class="token punctuation">(</span><span class="token punctuation">)</span>
    loss_dict <span class="token operator">=</span> <span class="token punctuation">{</span>k<span class="token punctuation">:</span> v<span class="token punctuation">.</span>cpu<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>detach<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>item<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">+</span> t_loss_dict<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>cpu<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>detach<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>item<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token keyword">in</span> s_loss_dict<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>

    <span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token keyword">in</span> loss_dict<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        history<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>v<span class="token punctuation">)</span>
    history<span class="token punctuation">[</span><span class="token string">&#39;mmd_loss&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>m_loss<span class="token punctuation">.</span>cpu<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>detach<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>item<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">return</span> history


<span class="token keyword">def</span> <span class="token function">train_code_mmd</span><span class="token punctuation">(</span>s_dataloaders<span class="token punctuation">,</span> t_dataloaders<span class="token punctuation">,</span> <span class="token operator">**</span>kwargs<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    :param s_dataloaders: 源域数据加载器，元组类型，第一个元素为训练集数据加载器，第二个元素为测试集数据加载器
    :param t_dataloaders: 目标域数据加载器，元组类型，第一个元素为训练集数据加载器，第二个元素为测试集数据加载器
    :param kwargs: 其他可选参数，字典类型
    :return: 共享编码器和训练历史记录
    &quot;&quot;&quot;</span>
    s_train_dataloader <span class="token operator">=</span> s_dataloaders<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
    s_test_dataloader <span class="token operator">=</span> s_dataloaders<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>

    t_train_dataloader <span class="token operator">=</span> t_dataloaders<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>
    t_test_dataloader <span class="token operator">=</span> t_dataloaders<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>

    <span class="token comment"># 初始化共享编码器和解码器</span>
    shared_encoder <span class="token operator">=</span> MLP<span class="token punctuation">(</span>input_dim<span class="token operator">=</span>kwargs<span class="token punctuation">[</span><span class="token string">&#39;input_dim&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                         output_dim<span class="token operator">=</span>kwargs<span class="token punctuation">[</span><span class="token string">&#39;latent_dim&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                         hidden_dims<span class="token operator">=</span>kwargs<span class="token punctuation">[</span><span class="token string">&#39;encoder_hidden_dims&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                         dop<span class="token operator">=</span>kwargs<span class="token punctuation">[</span><span class="token string">&#39;dop&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">(</span>kwargs<span class="token punctuation">[</span><span class="token string">&#39;device&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

    shared_decoder <span class="token operator">=</span> MLP<span class="token punctuation">(</span>input_dim<span class="token operator">=</span><span class="token number">2</span> <span class="token operator">*</span> kwargs<span class="token punctuation">[</span><span class="token string">&#39;latent_dim&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                         output_dim<span class="token operator">=</span>kwargs<span class="token punctuation">[</span><span class="token string">&#39;input_dim&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                         hidden_dims<span class="token operator">=</span>kwargs<span class="token punctuation">[</span><span class="token string">&#39;encoder_hidden_dims&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                         dop<span class="token operator">=</span>kwargs<span class="token punctuation">[</span><span class="token string">&#39;dop&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">(</span>kwargs<span class="token punctuation">[</span><span class="token string">&#39;device&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

    <span class="token comment"># 初始化源域和目标域的私有编码器</span>
    s_dsnae <span class="token operator">=</span> DSNAE<span class="token punctuation">(</span>shared_encoder<span class="token operator">=</span>shared_encoder<span class="token punctuation">,</span>
                    decoder<span class="token operator">=</span>shared_decoder<span class="token punctuation">,</span>
                    alpha<span class="token operator">=</span>kwargs<span class="token punctuation">[</span><span class="token string">&#39;alpha&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                    input_dim<span class="token operator">=</span>kwargs<span class="token punctuation">[</span><span class="token string">&#39;input_dim&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                    latent_dim<span class="token operator">=</span>kwargs<span class="token punctuation">[</span><span class="token string">&#39;latent_dim&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                    hidden_dims<span class="token operator">=</span>kwargs<span class="token punctuation">[</span><span class="token string">&#39;encoder_hidden_dims&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                    dop<span class="token operator">=</span>kwargs<span class="token punctuation">[</span><span class="token string">&#39;dop&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                    norm_flag<span class="token operator">=</span>kwargs<span class="token punctuation">[</span><span class="token string">&#39;norm_flag&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">(</span>kwargs<span class="token punctuation">[</span><span class="token string">&#39;device&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

    t_dsnae <span class="token operator">=</span> DSNAE<span class="token punctuation">(</span>shared_encoder<span class="token operator">=</span>shared_encoder<span class="token punctuation">,</span>
                    decoder<span class="token operator">=</span>shared_decoder<span class="token punctuation">,</span>
                    alpha<span class="token operator">=</span>kwargs<span class="token punctuation">[</span><span class="token string">&#39;alpha&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                    input_dim<span class="token operator">=</span>kwargs<span class="token punctuation">[</span><span class="token string">&#39;input_dim&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                    latent_dim<span class="token operator">=</span>kwargs<span class="token punctuation">[</span><span class="token string">&#39;latent_dim&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                    hidden_dims<span class="token operator">=</span>kwargs<span class="token punctuation">[</span><span class="token string">&#39;encoder_hidden_dims&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                    dop<span class="token operator">=</span>kwargs<span class="token punctuation">[</span><span class="token string">&#39;dop&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
                    norm_flag<span class="token operator">=</span>kwargs<span class="token punctuation">[</span><span class="token string">&#39;norm_flag&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">.</span>to<span class="token punctuation">(</span>kwargs<span class="token punctuation">[</span><span class="token string">&#39;device&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    
	<span class="token comment"># 获取训练设备</span>
    device <span class="token operator">=</span> kwargs<span class="token punctuation">[</span><span class="token string">&#39;device&#39;</span><span class="token punctuation">]</span>

    dsnae_train_history <span class="token operator">=</span> defaultdict<span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span>
    dsnae_val_history <span class="token operator">=</span> defaultdict<span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span>

    <span class="token keyword">if</span> kwargs<span class="token punctuation">[</span><span class="token string">&#39;retrain_flag&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
        ae_params <span class="token operator">=</span> <span class="token punctuation">[</span>t_dsnae<span class="token punctuation">.</span>private_encoder<span class="token punctuation">.</span>parameters<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                     s_dsnae<span class="token punctuation">.</span>private_encoder<span class="token punctuation">.</span>parameters<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                     shared_decoder<span class="token punctuation">.</span>parameters<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                     shared_encoder<span class="token punctuation">.</span>parameters<span class="token punctuation">(</span><span class="token punctuation">)</span>
                     <span class="token punctuation">]</span>

        ae_optimizer <span class="token operator">=</span> torch<span class="token punctuation">.</span>optim<span class="token punctuation">.</span>AdamW<span class="token punctuation">(</span>chain<span class="token punctuation">(</span><span class="token operator">*</span>ae_params<span class="token punctuation">)</span><span class="token punctuation">,</span> lr<span class="token operator">=</span>kwargs<span class="token punctuation">[</span><span class="token string">&#39;lr&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
        <span class="token keyword">for</span> epoch <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">int</span><span class="token punctuation">(</span>kwargs<span class="token punctuation">[</span><span class="token string">&#39;train_num_epochs&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> epoch <span class="token operator">%</span> <span class="token number">50</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>
                <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;AE training epoch </span><span class="token interpolation"><span class="token punctuation">{</span>epoch<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
            <span class="token keyword">for</span> step<span class="token punctuation">,</span> s_batch <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>s_train_dataloader<span class="token punctuation">)</span><span class="token punctuation">:</span>
                t_batch <span class="token operator">=</span> <span class="token builtin">next</span><span class="token punctuation">(</span><span class="token builtin">iter</span><span class="token punctuation">(</span>t_train_dataloader<span class="token punctuation">)</span><span class="token punctuation">)</span>
                dsnae_train_history <span class="token operator">=</span> dsn_ae_train_step<span class="token punctuation">(</span>s_dsnae<span class="token operator">=</span>s_dsnae<span class="token punctuation">,</span>
                                                        t_dsnae<span class="token operator">=</span>t_dsnae<span class="token punctuation">,</span>
                                                        s_batch<span class="token operator">=</span>s_batch<span class="token punctuation">,</span>
                                                        t_batch<span class="token operator">=</span>t_batch<span class="token punctuation">,</span>
                                                        device<span class="token operator">=</span>device<span class="token punctuation">,</span>
                                                        optimizer<span class="token operator">=</span>ae_optimizer<span class="token punctuation">,</span>
                                                        history<span class="token operator">=</span>dsnae_train_history<span class="token punctuation">)</span>
            dsnae_val_history <span class="token operator">=</span> eval_dsnae_epoch<span class="token punctuation">(</span>model<span class="token operator">=</span>s_dsnae<span class="token punctuation">,</span>
                                                 data_loader<span class="token operator">=</span>s_test_dataloader<span class="token punctuation">,</span>
                                                 device<span class="token operator">=</span>device<span class="token punctuation">,</span>
                                                 history<span class="token operator">=</span>dsnae_val_history
                                                 <span class="token punctuation">)</span>
            dsnae_val_history <span class="token operator">=</span> eval_dsnae_epoch<span class="token punctuation">(</span>model<span class="token operator">=</span>t_dsnae<span class="token punctuation">,</span>
                                                 data_loader<span class="token operator">=</span>t_test_dataloader<span class="token punctuation">,</span>
                                                 device<span class="token operator">=</span>device<span class="token punctuation">,</span>
                                                 history<span class="token operator">=</span>dsnae_val_history
                                                 <span class="token punctuation">)</span>
            <span class="token keyword">for</span> k <span class="token keyword">in</span> dsnae_val_history<span class="token punctuation">:</span>
                <span class="token keyword">if</span> k <span class="token operator">!=</span> <span class="token string">&#39;best_index&#39;</span><span class="token punctuation">:</span>
                    dsnae_val_history<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">+=</span> dsnae_val_history<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>
                    dsnae_val_history<span class="token punctuation">[</span>k<span class="token punctuation">]</span><span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span>

            save_flag<span class="token punctuation">,</span> stop_flag <span class="token operator">=</span> model_save_check<span class="token punctuation">(</span>dsnae_val_history<span class="token punctuation">,</span> metric_name<span class="token operator">=</span><span class="token string">&#39;loss&#39;</span><span class="token punctuation">,</span> tolerance_count<span class="token operator">=</span><span class="token number">50</span><span class="token punctuation">)</span>
            <span class="token keyword">if</span> kwargs<span class="token punctuation">[</span><span class="token string">&#39;es_flag&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
                <span class="token keyword">if</span> save_flag<span class="token punctuation">:</span>
                    torch<span class="token punctuation">.</span>save<span class="token punctuation">(</span>s_dsnae<span class="token punctuation">.</span>state_dict<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>kwargs<span class="token punctuation">[</span><span class="token string">&#39;model_save_folder&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;m_s_dsnae.pt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                    torch<span class="token punctuation">.</span>save<span class="token punctuation">(</span>t_dsnae<span class="token punctuation">.</span>state_dict<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>kwargs<span class="token punctuation">[</span><span class="token string">&#39;model_save_folder&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;m_t_dsnae.pt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                <span class="token keyword">if</span> stop_flag<span class="token punctuation">:</span>
                    <span class="token keyword">break</span>

        <span class="token keyword">if</span> kwargs<span class="token punctuation">[</span><span class="token string">&#39;es_flag&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
            s_dsnae<span class="token punctuation">.</span>load_state_dict<span class="token punctuation">(</span>torch<span class="token punctuation">.</span>load<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>kwargs<span class="token punctuation">[</span><span class="token string">&#39;model_save_folder&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;m_s_dsnae.pt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
            t_dsnae<span class="token punctuation">.</span>load_state_dict<span class="token punctuation">(</span>torch<span class="token punctuation">.</span>load<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>kwargs<span class="token punctuation">[</span><span class="token string">&#39;model_save_folder&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;m_t_dsnae.pt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

        torch<span class="token punctuation">.</span>save<span class="token punctuation">(</span>s_dsnae<span class="token punctuation">.</span>state_dict<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>kwargs<span class="token punctuation">[</span><span class="token string">&#39;model_save_folder&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;m_s_dsnae.pt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
        torch<span class="token punctuation">.</span>save<span class="token punctuation">(</span>t_dsnae<span class="token punctuation">.</span>state_dict<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>kwargs<span class="token punctuation">[</span><span class="token string">&#39;model_save_folder&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;m_t_dsnae.pt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            <span class="token keyword">if</span> kwargs<span class="token punctuation">[</span><span class="token string">&#39;norm_flag&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
                loaded_model <span class="token operator">=</span> torch<span class="token punctuation">.</span>load<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>kwargs<span class="token punctuation">[</span><span class="token string">&#39;model_save_folder&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;m_t_dsnae.pt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
                new_loaded_model <span class="token operator">=</span> <span class="token punctuation">{</span>key<span class="token punctuation">:</span> val <span class="token keyword">for</span> key<span class="token punctuation">,</span> val <span class="token keyword">in</span> loaded_model<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">if</span> key <span class="token keyword">in</span> t_dsnae<span class="token punctuation">.</span>state_dict<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span>
                new_loaded_model<span class="token punctuation">[</span><span class="token string">&#39;shared_encoder.output_layer.0.weight&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> loaded_model<span class="token punctuation">[</span>
                    <span class="token string">&#39;shared_encoder.output_layer.3.weight&#39;</span><span class="token punctuation">]</span>
                new_loaded_model<span class="token punctuation">[</span><span class="token string">&#39;shared_encoder.output_layer.0.bias&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> loaded_model<span class="token punctuation">[</span>
                    <span class="token string">&#39;shared_encoder.output_layer.3.bias&#39;</span><span class="token punctuation">]</span>
                new_loaded_model<span class="token punctuation">[</span><span class="token string">&#39;decoder.output_layer.0.weight&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> loaded_model<span class="token punctuation">[</span><span class="token string">&#39;decoder.output_layer.3.weight&#39;</span><span class="token punctuation">]</span>
                new_loaded_model<span class="token punctuation">[</span><span class="token string">&#39;decoder.output_layer.0.bias&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> loaded_model<span class="token punctuation">[</span><span class="token string">&#39;decoder.output_layer.3.bias&#39;</span><span class="token punctuation">]</span>

                corrected_model <span class="token operator">=</span> OrderedDict<span class="token punctuation">(</span><span class="token punctuation">{</span>key<span class="token punctuation">:</span> new_loaded_model<span class="token punctuation">[</span>key<span class="token punctuation">]</span> <span class="token keyword">for</span> key <span class="token keyword">in</span> t_dsnae<span class="token punctuation">.</span>state_dict<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">}</span><span class="token punctuation">)</span>
                t_dsnae<span class="token punctuation">.</span>load_state_dict<span class="token punctuation">(</span>corrected_model<span class="token punctuation">)</span>
            <span class="token keyword">else</span><span class="token punctuation">:</span>
                t_dsnae<span class="token punctuation">.</span>load_state_dict<span class="token punctuation">(</span>torch<span class="token punctuation">.</span>load<span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>kwargs<span class="token punctuation">[</span><span class="token string">&#39;model_save_folder&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">&#39;m_t_dsnae.pt&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>

        <span class="token keyword">except</span> FileNotFoundError<span class="token punctuation">:</span>
            <span class="token keyword">raise</span> Exception<span class="token punctuation">(</span><span class="token string">&quot;No pre-trained encoder&quot;</span><span class="token punctuation">)</span>


    <span class="token keyword">return</span> t_dsnae<span class="token punctuation">.</span>shared_encoder<span class="token punctuation">,</span> <span class="token punctuation">(</span>dsnae_train_history<span class="token punctuation">,</span> dsnae_val_history<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h4 id="_5-3-evaluation-utils-py" tabindex="-1"><a class="header-anchor" href="#_5-3-evaluation-utils-py" aria-hidden="true">#</a> 5.3 evaluation_utils.py</h4><details class="hint-container details"><summary>evaluation_utils.py（非全部函数）</summary><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">from</span> collections <span class="token keyword">import</span> defaultdict
<span class="token keyword">import</span> numpy <span class="token keyword">as</span> np
<span class="token keyword">import</span> torch
<span class="token keyword">from</span> sklearn<span class="token punctuation">.</span>metrics <span class="token keyword">import</span> roc_auc_score<span class="token punctuation">,</span> average_precision_score<span class="token punctuation">,</span> accuracy_score<span class="token punctuation">,</span> f1_score<span class="token punctuation">,</span> log_loss<span class="token punctuation">,</span> auc<span class="token punctuation">,</span> precision_recall_curve


<span class="token keyword">def</span> <span class="token function">model_save_check</span><span class="token punctuation">(</span>history<span class="token punctuation">,</span> metric_name<span class="token punctuation">,</span> tolerance_count<span class="token operator">=</span><span class="token number">5</span><span class="token punctuation">,</span> reset_count<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;
    检查模型训练过程中某个度量指标(loss/distance)的历史记录，并根据指标的变化情况确定是否保存模型，以及是否停止训练。其中，tolerance_count和reset_count分别表示连续达到多少次指标变差的次数和重新计数的次数，用于控制停止训练的时机。如果度量指标以&#39;loss&#39;结尾，则使用更低的指标值进行比较，否则使用更高的指标值进行比较。最后，函数返回一个保存标志和一个停止标志，用于告知模型训练过程中是否需要保存模型和停止训练。
    &quot;&quot;&quot;</span>
    save_flag <span class="token operator">=</span> <span class="token boolean">False</span>
    stop_flag <span class="token operator">=</span> <span class="token boolean">False</span>
    <span class="token keyword">if</span> <span class="token string">&#39;best_index&#39;</span> <span class="token keyword">not</span> <span class="token keyword">in</span> history<span class="token punctuation">:</span>
        history<span class="token punctuation">[</span><span class="token string">&#39;best_index&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">0</span>
    <span class="token keyword">if</span> metric_name<span class="token punctuation">.</span>endswith<span class="token punctuation">(</span><span class="token string">&#39;loss&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> history<span class="token punctuation">[</span>metric_name<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&lt;=</span> history<span class="token punctuation">[</span>metric_name<span class="token punctuation">]</span><span class="token punctuation">[</span>history<span class="token punctuation">[</span><span class="token string">&#39;best_index&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
            save_flag <span class="token operator">=</span> <span class="token boolean">True</span>
            history<span class="token punctuation">[</span><span class="token string">&#39;best_index&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>history<span class="token punctuation">[</span>metric_name<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">if</span> history<span class="token punctuation">[</span>metric_name<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&gt;=</span> history<span class="token punctuation">[</span>metric_name<span class="token punctuation">]</span><span class="token punctuation">[</span>history<span class="token punctuation">[</span><span class="token string">&#39;best_index&#39;</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
            save_flag <span class="token operator">=</span> <span class="token boolean">True</span>
            history<span class="token punctuation">[</span><span class="token string">&#39;best_index&#39;</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>history<span class="token punctuation">[</span>metric_name<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span>

    <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>history<span class="token punctuation">[</span>metric_name<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span> history<span class="token punctuation">[</span><span class="token string">&#39;best_index&#39;</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> tolerance_count <span class="token operator">*</span> reset_count <span class="token keyword">and</span> history<span class="token punctuation">[</span><span class="token string">&#39;best_index&#39;</span><span class="token punctuation">]</span> <span class="token operator">&gt;</span> <span class="token number">0</span><span class="token punctuation">:</span>
        stop_flag <span class="token operator">=</span> <span class="token boolean">True</span>

    <span class="token keyword">return</span> save_flag<span class="token punctuation">,</span> stop_flag
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details><h4 id="_5-4-pretrain-hyper-main-py" tabindex="-1"><a class="header-anchor" href="#_5-4-pretrain-hyper-main-py" aria-hidden="true">#</a> 5.4 pretrain_hyper_main.py</h4><details class="hint-container details"><summary>pretrain_hyper_main.py</summary><div class="language-python line-numbers-mode" data-ext="py"><pre class="language-python"><code><span class="token keyword">import</span> pandas <span class="token keyword">as</span> pd
<span class="token keyword">import</span> torch
<span class="token keyword">import</span> json
<span class="token keyword">import</span> os
<span class="token keyword">import</span> argparse
<span class="token keyword">import</span> random
<span class="token keyword">import</span> pickle
<span class="token keyword">import</span> itertools

<span class="token keyword">import</span> data
<span class="token keyword">import</span> data_config
<span class="token keyword">import</span> train_code_adv
<span class="token keyword">import</span> train_adae
<span class="token keyword">import</span> train_code_base
<span class="token keyword">import</span> train_coral
<span class="token keyword">import</span> train_dae
<span class="token keyword">import</span> train_vae
<span class="token keyword">import</span> train_ae
<span class="token keyword">import</span> train_code_mmd
<span class="token keyword">import</span> train_dsn
<span class="token keyword">import</span> train_dsna


<span class="token keyword">def</span> <span class="token function">generate_encoded_features</span><span class="token punctuation">(</span>encoder<span class="token punctuation">,</span> dataloader<span class="token punctuation">,</span> normalize_flag<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token triple-quoted-string string">&quot;&quot;&quot;

    :param normalize_flag:
    :param encoder:
    :param dataloader:
    :return:
    &quot;&quot;&quot;</span>
    encoder<span class="token punctuation">.</span><span class="token builtin">eval</span><span class="token punctuation">(</span><span class="token punctuation">)</span>
    raw_feature_tensor <span class="token operator">=</span> dataloader<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>tensors<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">.</span>cpu<span class="token punctuation">(</span><span class="token punctuation">)</span>
    label_tensor <span class="token operator">=</span> dataloader<span class="token punctuation">.</span>dataset<span class="token punctuation">.</span>tensors<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">.</span>cpu<span class="token punctuation">(</span><span class="token punctuation">)</span>

    encoded_feature_tensor <span class="token operator">=</span> encoder<span class="token punctuation">.</span>cpu<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">(</span>raw_feature_tensor<span class="token punctuation">)</span>
    <span class="token keyword">if</span> normalize_flag<span class="token punctuation">:</span>
        encoded_feature_tensor <span class="token operator">=</span> torch<span class="token punctuation">.</span>nn<span class="token punctuation">.</span>functional<span class="token punctuation">.</span>normalize<span class="token punctuation">(</span>encoded_feature_tensor<span class="token punctuation">,</span> p<span class="token operator">=</span><span class="token number">2</span><span class="token punctuation">,</span> dim<span class="token operator">=</span><span class="token number">1</span><span class="token punctuation">)</span>
    <span class="token keyword">return</span> encoded_feature_tensor<span class="token punctuation">,</span> label_tensor


<span class="token keyword">def</span> <span class="token function">load_pickle</span><span class="token punctuation">(</span>pickle_file<span class="token punctuation">)</span><span class="token punctuation">:</span>
    data <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>pickle_file<span class="token punctuation">,</span> <span class="token string">&#39;rb&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
        <span class="token keyword">try</span><span class="token punctuation">:</span>
            <span class="token keyword">while</span> <span class="token boolean">True</span><span class="token punctuation">:</span>
                data<span class="token punctuation">.</span>append<span class="token punctuation">(</span>pickle<span class="token punctuation">.</span>load<span class="token punctuation">(</span>f<span class="token punctuation">)</span><span class="token punctuation">)</span>
        <span class="token keyword">except</span> EOFError<span class="token punctuation">:</span>
            <span class="token keyword">pass</span>

    <span class="token keyword">return</span> data


<span class="token keyword">def</span> <span class="token function">wrap_training_params</span><span class="token punctuation">(</span>training_params<span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token string">&#39;unlabeled&#39;</span><span class="token punctuation">)</span><span class="token punctuation">:</span>
    aux_dict <span class="token operator">=</span> <span class="token punctuation">{</span>k<span class="token punctuation">:</span> v <span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token keyword">in</span> training_params<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">if</span> k <span class="token keyword">not</span> <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">&#39;unlabeled&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;labeled&#39;</span><span class="token punctuation">]</span><span class="token punctuation">}</span>
    aux_dict<span class="token punctuation">.</span>update<span class="token punctuation">(</span><span class="token operator">**</span>training_params<span class="token punctuation">[</span><span class="token builtin">type</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

    <span class="token keyword">return</span> aux_dict


<span class="token keyword">def</span> <span class="token function">safe_make_dir</span><span class="token punctuation">(</span>new_folder_name<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> <span class="token keyword">not</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>exists<span class="token punctuation">(</span>new_folder_name<span class="token punctuation">)</span><span class="token punctuation">:</span>
        os<span class="token punctuation">.</span>makedirs<span class="token punctuation">(</span>new_folder_name<span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        <span class="token keyword">print</span><span class="token punctuation">(</span>new_folder_name<span class="token punctuation">,</span> <span class="token string">&#39;exists!&#39;</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">dict_to_str</span><span class="token punctuation">(</span>d<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">return</span> <span class="token string">&quot;_&quot;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token string">&quot;_&quot;</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token punctuation">[</span>k<span class="token punctuation">,</span> <span class="token builtin">str</span><span class="token punctuation">(</span>v<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token keyword">for</span> k<span class="token punctuation">,</span> v <span class="token keyword">in</span> d<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">)</span>


<span class="token keyword">def</span> <span class="token function">main</span><span class="token punctuation">(</span>args<span class="token punctuation">,</span> update_params_dict<span class="token punctuation">)</span><span class="token punctuation">:</span>
    <span class="token keyword">if</span> args<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">&#39;dsn&#39;</span><span class="token punctuation">:</span>
        train_fn <span class="token operator">=</span> train_dsn<span class="token punctuation">.</span>train_dsn
    <span class="token keyword">elif</span> args<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">&#39;adae&#39;</span><span class="token punctuation">:</span>
        train_fn <span class="token operator">=</span> train_adae<span class="token punctuation">.</span>train_adae
    <span class="token keyword">elif</span> args<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">&#39;coral&#39;</span><span class="token punctuation">:</span>
        train_fn <span class="token operator">=</span> train_coral<span class="token punctuation">.</span>train_coral
    <span class="token keyword">elif</span> args<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">&#39;dae&#39;</span><span class="token punctuation">:</span>
        train_fn <span class="token operator">=</span> train_dae<span class="token punctuation">.</span>train_dae
    <span class="token keyword">elif</span> args<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">&#39;vae&#39;</span><span class="token punctuation">:</span>
        train_fn <span class="token operator">=</span> train_vae<span class="token punctuation">.</span>train_vae
    <span class="token keyword">elif</span> args<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">&#39;vaen&#39;</span><span class="token punctuation">:</span>
        train_fn <span class="token operator">=</span> train_vae<span class="token punctuation">.</span>train_vae
    <span class="token keyword">elif</span> args<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">&#39;ae&#39;</span><span class="token punctuation">:</span>
        train_fn <span class="token operator">=</span> train_ae<span class="token punctuation">.</span>train_ae
    <span class="token keyword">elif</span> args<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">&#39;code_mmd&#39;</span><span class="token punctuation">:</span>
        train_fn <span class="token operator">=</span> train_code_mmd<span class="token punctuation">.</span>train_code_mmd
    <span class="token keyword">elif</span> args<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">&#39;code_base&#39;</span><span class="token punctuation">:</span>
        train_fn <span class="token operator">=</span> train_code_base<span class="token punctuation">.</span>train_code_base
    <span class="token keyword">elif</span> args<span class="token punctuation">.</span>method <span class="token operator">==</span> <span class="token string">&#39;dsna&#39;</span><span class="token punctuation">:</span>
        train_fn <span class="token operator">=</span> train_dsna<span class="token punctuation">.</span>train_dsna
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        train_fn <span class="token operator">=</span> train_code_adv<span class="token punctuation">.</span>train_code_adv

    device <span class="token operator">=</span> <span class="token string">&#39;cuda&#39;</span> <span class="token keyword">if</span> torch<span class="token punctuation">.</span>cuda<span class="token punctuation">.</span>is_available<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token string">&#39;cpu&#39;</span>
    gex_features_df <span class="token operator">=</span> pd<span class="token punctuation">.</span>read_csv<span class="token punctuation">(</span>data_config<span class="token punctuation">.</span>gex_feature_file<span class="token punctuation">,</span> index_col<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">)</span>

    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token string">&#39;model_save/train_params.json&#39;</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token string">&#39;r&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
        training_params <span class="token operator">=</span> json<span class="token punctuation">.</span>load<span class="token punctuation">(</span>f<span class="token punctuation">)</span>

    training_params<span class="token punctuation">[</span><span class="token string">&#39;unlabeled&#39;</span><span class="token punctuation">]</span><span class="token punctuation">.</span>update<span class="token punctuation">(</span>update_params_dict<span class="token punctuation">)</span>
    param_str <span class="token operator">=</span> dict_to_str<span class="token punctuation">(</span>update_params_dict<span class="token punctuation">)</span>

    <span class="token keyword">if</span> <span class="token keyword">not</span> args<span class="token punctuation">.</span>norm_flag<span class="token punctuation">:</span>
        method_save_folder <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token string">&#39;model_save&#39;</span><span class="token punctuation">,</span> args<span class="token punctuation">.</span>method<span class="token punctuation">)</span>
    <span class="token keyword">else</span><span class="token punctuation">:</span>
        method_save_folder <span class="token operator">=</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span><span class="token string">&#39;model_save&#39;</span><span class="token punctuation">,</span> <span class="token string-interpolation"><span class="token string">f&#39;</span><span class="token interpolation"><span class="token punctuation">{</span>args<span class="token punctuation">.</span>method<span class="token punctuation">}</span></span><span class="token string">_norm&#39;</span></span><span class="token punctuation">)</span>

    training_params<span class="token punctuation">.</span>update<span class="token punctuation">(</span>
        <span class="token punctuation">{</span>
            <span class="token string">&#39;device&#39;</span><span class="token punctuation">:</span> device<span class="token punctuation">,</span>
            <span class="token string">&#39;input_dim&#39;</span><span class="token punctuation">:</span> gex_features_df<span class="token punctuation">.</span>shape<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
            <span class="token string">&#39;model_save_folder&#39;</span><span class="token punctuation">:</span> os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>method_save_folder<span class="token punctuation">,</span> param_str<span class="token punctuation">)</span><span class="token punctuation">,</span>
            <span class="token string">&#39;es_flag&#39;</span><span class="token punctuation">:</span> <span class="token boolean">False</span><span class="token punctuation">,</span>
            <span class="token string">&#39;retrain_flag&#39;</span><span class="token punctuation">:</span> args<span class="token punctuation">.</span>retrain_flag<span class="token punctuation">,</span>
            <span class="token string">&#39;norm_flag&#39;</span><span class="token punctuation">:</span> args<span class="token punctuation">.</span>norm_flag
        <span class="token punctuation">}</span><span class="token punctuation">)</span>

    safe_make_dir<span class="token punctuation">(</span>training_params<span class="token punctuation">[</span><span class="token string">&#39;model_save_folder&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>
    random<span class="token punctuation">.</span>seed<span class="token punctuation">(</span><span class="token number">2020</span><span class="token punctuation">)</span>

    s_dataloaders<span class="token punctuation">,</span> t_dataloaders <span class="token operator">=</span> data<span class="token punctuation">.</span>get_unlabeled_dataloaders<span class="token punctuation">(</span>
        gex_features_df<span class="token operator">=</span>gex_features_df<span class="token punctuation">,</span>
        seed<span class="token operator">=</span><span class="token number">2020</span><span class="token punctuation">,</span>
        batch_size<span class="token operator">=</span>training_params<span class="token punctuation">[</span><span class="token string">&#39;unlabeled&#39;</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token string">&#39;batch_size&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        ccle_only<span class="token operator">=</span><span class="token boolean">True</span>
    <span class="token punctuation">)</span>

    <span class="token comment"># start unlabeled training</span>
    encoder<span class="token punctuation">,</span> historys <span class="token operator">=</span> train_fn<span class="token punctuation">(</span>s_dataloaders<span class="token operator">=</span>s_dataloaders<span class="token punctuation">,</span>
                                 t_dataloaders<span class="token operator">=</span>t_dataloaders<span class="token punctuation">,</span>
                                 <span class="token operator">**</span>wrap_training_params<span class="token punctuation">(</span>training_params<span class="token punctuation">,</span> <span class="token builtin">type</span><span class="token operator">=</span><span class="token string">&#39;unlabeled&#39;</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    <span class="token keyword">with</span> <span class="token builtin">open</span><span class="token punctuation">(</span>os<span class="token punctuation">.</span>path<span class="token punctuation">.</span>join<span class="token punctuation">(</span>training_params<span class="token punctuation">[</span><span class="token string">&#39;model_save_folder&#39;</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string-interpolation"><span class="token string">f&#39;unlabel_train_history.pickle&#39;</span></span><span class="token punctuation">)</span><span class="token punctuation">,</span>
              <span class="token string">&#39;wb&#39;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> f<span class="token punctuation">:</span>
        <span class="token keyword">for</span> history <span class="token keyword">in</span> historys<span class="token punctuation">:</span>
            pickle<span class="token punctuation">.</span>dump<span class="token punctuation">(</span><span class="token builtin">dict</span><span class="token punctuation">(</span>history<span class="token punctuation">)</span><span class="token punctuation">,</span> f<span class="token punctuation">)</span>


<span class="token keyword">if</span> __name__ <span class="token operator">==</span> <span class="token string">&#39;__main__&#39;</span><span class="token punctuation">:</span>
    parser <span class="token operator">=</span> argparse<span class="token punctuation">.</span>ArgumentParser<span class="token punctuation">(</span><span class="token string">&#39;ADSN training and evaluation&#39;</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--method&#39;</span><span class="token punctuation">,</span> dest<span class="token operator">=</span><span class="token string">&#39;method&#39;</span><span class="token punctuation">,</span> nargs<span class="token operator">=</span><span class="token string">&#39;?&#39;</span><span class="token punctuation">,</span> default<span class="token operator">=</span><span class="token string">&#39;code_adv&#39;</span><span class="token punctuation">,</span>
                        choices<span class="token operator">=</span><span class="token punctuation">[</span><span class="token string">&#39;code_adv&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;dsna&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;dsn&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;code_base&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;code_mmd&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;adae&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;coral&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;dae&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;vae&#39;</span><span class="token punctuation">,</span>
                                 <span class="token string">&#39;vaen&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;ae&#39;</span><span class="token punctuation">]</span><span class="token punctuation">)</span>

    train_group <span class="token operator">=</span> parser<span class="token punctuation">.</span>add_mutually_exclusive_group<span class="token punctuation">(</span>required<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
    train_group<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--train&#39;</span><span class="token punctuation">,</span> dest<span class="token operator">=</span><span class="token string">&#39;retrain_flag&#39;</span><span class="token punctuation">,</span> action<span class="token operator">=</span><span class="token string">&#39;store_true&#39;</span><span class="token punctuation">)</span>
    train_group<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--no-train&#39;</span><span class="token punctuation">,</span> dest<span class="token operator">=</span><span class="token string">&#39;retrain_flag&#39;</span><span class="token punctuation">,</span> action<span class="token operator">=</span><span class="token string">&#39;store_false&#39;</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>set_defaults<span class="token punctuation">(</span>retrain_flag<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

    train_group<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--pdtc&#39;</span><span class="token punctuation">,</span> dest<span class="token operator">=</span><span class="token string">&#39;pdtc_flag&#39;</span><span class="token punctuation">,</span> action<span class="token operator">=</span><span class="token string">&#39;store_true&#39;</span><span class="token punctuation">)</span>
    train_group<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--no-pdtc&#39;</span><span class="token punctuation">,</span> dest<span class="token operator">=</span><span class="token string">&#39;pdtc_flag&#39;</span><span class="token punctuation">,</span> action<span class="token operator">=</span><span class="token string">&#39;store_false&#39;</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>set_defaults<span class="token punctuation">(</span>pdtc_flag<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>

    norm_group <span class="token operator">=</span> parser<span class="token punctuation">.</span>add_mutually_exclusive_group<span class="token punctuation">(</span>required<span class="token operator">=</span><span class="token boolean">False</span><span class="token punctuation">)</span>
    norm_group<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--norm&#39;</span><span class="token punctuation">,</span> dest<span class="token operator">=</span><span class="token string">&#39;norm_flag&#39;</span><span class="token punctuation">,</span> action<span class="token operator">=</span><span class="token string">&#39;store_true&#39;</span><span class="token punctuation">)</span>
    norm_group<span class="token punctuation">.</span>add_argument<span class="token punctuation">(</span><span class="token string">&#39;--no-norm&#39;</span><span class="token punctuation">,</span> dest<span class="token operator">=</span><span class="token string">&#39;norm_flag&#39;</span><span class="token punctuation">,</span> action<span class="token operator">=</span><span class="token string">&#39;store_false&#39;</span><span class="token punctuation">)</span>
    parser<span class="token punctuation">.</span>set_defaults<span class="token punctuation">(</span>norm_flag<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>

    args <span class="token operator">=</span> parser<span class="token punctuation">.</span>parse_args<span class="token punctuation">(</span><span class="token punctuation">)</span>
    <span class="token keyword">print</span><span class="token punctuation">(</span><span class="token string-interpolation"><span class="token string">f&#39;current config is </span><span class="token interpolation"><span class="token punctuation">{</span>args<span class="token punctuation">}</span></span><span class="token string">&#39;</span></span><span class="token punctuation">)</span>
    params_grid <span class="token operator">=</span> <span class="token punctuation">{</span>
        <span class="token string">&quot;pretrain_num_epochs&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">&quot;train_num_epochs&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">100</span><span class="token punctuation">,</span> <span class="token number">200</span><span class="token punctuation">,</span> <span class="token number">300</span><span class="token punctuation">,</span> <span class="token number">500</span><span class="token punctuation">,</span> <span class="token number">750</span><span class="token punctuation">,</span> <span class="token number">1000</span><span class="token punctuation">,</span> <span class="token number">1500</span><span class="token punctuation">,</span> <span class="token number">2000</span><span class="token punctuation">,</span> <span class="token number">2500</span><span class="token punctuation">,</span> <span class="token number">3000</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
        <span class="token string">&quot;dop&quot;</span><span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token number">0.0</span><span class="token punctuation">,</span> <span class="token number">0.1</span><span class="token punctuation">]</span>
    <span class="token punctuation">}</span>

    <span class="token keyword">if</span> args<span class="token punctuation">.</span>method <span class="token keyword">not</span> <span class="token keyword">in</span> <span class="token punctuation">[</span><span class="token string">&#39;code_adv&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;adsn&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;adae&#39;</span><span class="token punctuation">,</span> <span class="token string">&#39;dsnw&#39;</span><span class="token punctuation">]</span><span class="token punctuation">:</span>
        params_grid<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token string">&#39;pretrain_num_epochs&#39;</span><span class="token punctuation">)</span>

    keys<span class="token punctuation">,</span> values <span class="token operator">=</span> <span class="token builtin">zip</span><span class="token punctuation">(</span><span class="token operator">*</span>params_grid<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>
    update_params_dict_list <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token builtin">zip</span><span class="token punctuation">(</span>keys<span class="token punctuation">,</span> v<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">for</span> v <span class="token keyword">in</span> itertools<span class="token punctuation">.</span>product<span class="token punctuation">(</span><span class="token operator">*</span>values<span class="token punctuation">)</span><span class="token punctuation">]</span>

    <span class="token keyword">for</span> param_dict <span class="token keyword">in</span> update_params_dict_list<span class="token punctuation">:</span>
        main<span class="token punctuation">(</span>args<span class="token operator">=</span>args<span class="token punctuation">,</span> update_params_dict<span class="token operator">=</span>param_dict<span class="token punctuation">)</span>

</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></details>`,14),f=[u,r,m,d,k,v,h,g,_,b,y];function w(z,x){return i(),c("div",null,f)}const E=l(o,[["render",w],["__file","CODE-AE.html.vue"]]);export{E as default};
